# Generated by Django 5.2.7 on 2025-10-28 14:03

import django.core.validators
import django.db.models.deletion
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='SubscriptionPlan',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=50, unique=True)),
                ('plan_type', models.CharField(choices=[('free', 'Free'), ('pro', 'Pro'), ('premium', 'Premium')], max_length=20)),
                ('interval', models.CharField(choices=[('month', 'Monthly'), ('year', 'Yearly')], default='month', max_length=10)),
                ('price', models.DecimalField(decimal_places=2, help_text='Price in USD', max_digits=8, validators=[django.core.validators.MinValueValidator(0)])),
                ('stripe_price_id', models.CharField(blank=True, help_text='Stripe Price ID', max_length=100)),
                ('max_loans', models.PositiveIntegerField(default=10, help_text='Maximum number of loans allowed')),
                ('can_export', models.BooleanField(default=False, help_text='Can export plans to PDF')),
                ('can_compare', models.BooleanField(default=False, help_text='Can compare multiple plans')),
                ('advanced_analytics', models.BooleanField(default=False, help_text='Access to advanced analytics')),
                ('priority_support', models.BooleanField(default=False, help_text='Priority customer support')),
                ('api_access', models.BooleanField(default=False, help_text='API access for integrations')),
                ('is_active', models.BooleanField(default=True, help_text='Whether this plan is available for purchase')),
                ('is_popular', models.BooleanField(default=False, help_text='Mark as popular plan')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Subscription Plan',
                'verbose_name_plural': 'Subscription Plans',
                'ordering': ['price'],
            },
        ),
        migrations.CreateModel(
            name='WaitingList',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('email', models.EmailField(max_length=254, unique=True)),
                ('name', models.CharField(max_length=100)),
                ('interest', models.CharField(choices=[('free', 'Free basic calculator'), ('pro', 'Pro features'), ('premium', 'Premium features'), ('business', 'Business solutions')], default='free', max_length=20)),
                ('signup_ip', models.GenericIPAddressField(blank=True, null=True)),
                ('user_agent', models.TextField(blank=True)),
                ('is_notified', models.BooleanField(default=False, help_text='Whether user has been notified of launch')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'verbose_name': 'Waiting List',
                'verbose_name_plural': 'Waiting List',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='UserSubscription',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('stripe_subscription_id', models.CharField(blank=True, max_length=100)),
                ('stripe_customer_id', models.CharField(blank=True, max_length=100)),
                ('stripe_price_id', models.CharField(blank=True, max_length=100)),
                ('status', models.CharField(choices=[('active', 'Active'), ('canceled', 'Canceled'), ('past_due', 'Past Due'), ('incomplete', 'Incomplete'), ('trialing', 'Trialing')], default='active', max_length=20)),
                ('current_period_start', models.DateTimeField(blank=True, null=True)),
                ('current_period_end', models.DateTimeField(blank=True, null=True)),
                ('cancel_at_period_end', models.BooleanField(default=False)),
                ('trial_start', models.DateTimeField(blank=True, null=True)),
                ('trial_end', models.DateTimeField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('plan', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='billing.subscriptionplan')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='subscription', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'User Subscription',
                'verbose_name_plural': 'User Subscriptions',
            },
        ),
        migrations.CreateModel(
            name='Payment',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('payment_type', models.CharField(choices=[('subscription', 'Subscription'), ('one_time', 'One-time Purchase')], max_length=20)),
                ('amount', models.DecimalField(decimal_places=2, max_digits=8, validators=[django.core.validators.MinValueValidator(0.01)])),
                ('currency', models.CharField(default='usd', max_length=3)),
                ('stripe_payment_intent_id', models.CharField(blank=True, max_length=100)),
                ('stripe_charge_id', models.CharField(blank=True, max_length=100)),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('succeeded', 'Succeeded'), ('failed', 'Failed'), ('canceled', 'Canceled'), ('refunded', 'Refunded')], default='pending', max_length=20)),
                ('description', models.TextField(blank=True, help_text='Description of the payment')),
                ('failure_reason', models.TextField(blank=True, help_text='Reason for payment failure')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('paid_at', models.DateTimeField(blank=True, null=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='payments', to=settings.AUTH_USER_MODEL)),
                ('subscription', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='payments', to='billing.usersubscription')),
            ],
            options={
                'verbose_name': 'Payment',
                'verbose_name_plural': 'Payments',
                'ordering': ['-created_at'],
            },
        ),
    ]
