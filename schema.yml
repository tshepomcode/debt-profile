openapi: 3.0.3
info:
  title: Debt Profile API
  version: 1.0.0
  description: API for personalized debt-busting financial plans
paths:
  /api/auth/login/:
    post:
      operationId: api_auth_login_create
      description: |-
        Check the credentials and return the REST Token
        if the credentials are valid and authenticated.
        Calls Django Auth login method to register User ID
        in Django session framework

        Accept the following POST parameters: username, password
        Return the REST Framework Token Object's key.
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Login'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Login'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Login'
        required: true
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Token'
          description: ''
  /api/auth/logout/:
    post:
      operationId: api_auth_logout_create
      description: |-
        Calls Django logout method and delete the Token object
        assigned to the current User object.

        Accepts/Returns nothing.
      tags:
      - api
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RestAuthDetail'
          description: ''
  /api/auth/password/change/:
    post:
      operationId: api_auth_password_change_create
      description: |-
        Calls Django Auth SetPasswordForm save method.

        Accepts the following POST parameters: new_password1, new_password2
        Returns the success/fail message.
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PasswordChange'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PasswordChange'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PasswordChange'
        required: true
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RestAuthDetail'
          description: ''
  /api/auth/password/reset/:
    post:
      operationId: api_auth_password_reset_create
      description: |-
        Calls Django Auth PasswordResetForm save method.

        Accepts the following POST parameters: email
        Returns the success/fail message.
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PasswordReset'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PasswordReset'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PasswordReset'
        required: true
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RestAuthDetail'
          description: ''
  /api/auth/password/reset/confirm/:
    post:
      operationId: api_auth_password_reset_confirm_create
      description: |-
        Password reset e-mail link is confirmed, therefore
        this resets the user's password.

        Accepts the following POST parameters: token, uid,
            new_password1, new_password2
        Returns the success/fail message.
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PasswordResetConfirm'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PasswordResetConfirm'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PasswordResetConfirm'
        required: true
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RestAuthDetail'
          description: ''
  /api/auth/registration/:
    post:
      operationId: api_auth_registration_create
      description: |-
        Registers a new user.

        Accepts the following POST parameters: username, email, password1, password2.
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Register'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Register'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Register'
        required: true
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RestAuthDetail'
          description: ''
  /api/auth/registration/resend-email/:
    post:
      operationId: api_auth_registration_resend_email_create
      description: |-
        Resends another email to an unverified email.

        Accepts the following POST parameter: email.
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ResendEmailVerification'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ResendEmailVerification'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ResendEmailVerification'
        required: true
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RestAuthDetail'
          description: ''
  /api/auth/registration/verify-email/:
    post:
      operationId: api_auth_registration_verify_email_create
      description: |-
        Verifies the email associated with the provided key.

        Accepts the following POST parameter: key.
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/VerifyEmail'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/VerifyEmail'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/VerifyEmail'
        required: true
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RestAuthDetail'
          description: ''
  /api/auth/user/:
    get:
      operationId: api_auth_user_retrieve
      description: |-
        Reads and updates UserModel fields
        Accepts GET, PUT, PATCH methods.

        Default accepted fields: username, first_name, last_name
        Default display fields: pk, username, email, first_name, last_name
        Read-only fields: pk, email

        Returns UserModel fields.
      tags:
      - api
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserDetails'
          description: ''
    put:
      operationId: api_auth_user_update
      description: |-
        Reads and updates UserModel fields
        Accepts GET, PUT, PATCH methods.

        Default accepted fields: username, first_name, last_name
        Default display fields: pk, username, email, first_name, last_name
        Read-only fields: pk, email

        Returns UserModel fields.
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserDetails'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/UserDetails'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/UserDetails'
        required: true
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserDetails'
          description: ''
    patch:
      operationId: api_auth_user_partial_update
      description: |-
        Reads and updates UserModel fields
        Accepts GET, PUT, PATCH methods.

        Default accepted fields: username, first_name, last_name
        Default display fields: pk, username, email, first_name, last_name
        Read-only fields: pk, email

        Returns UserModel fields.
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedUserDetails'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedUserDetails'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedUserDetails'
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserDetails'
          description: ''
  /api/billing/payments/:
    get:
      operationId: api_billing_payments_list
      description: ViewSet for managing payments.
      parameters:
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      tags:
      - api
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedPaymentList'
          description: ''
    post:
      operationId: api_billing_payments_create
      description: ViewSet for managing payments.
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Payment'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Payment'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Payment'
        required: true
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Payment'
          description: ''
  /api/billing/payments/{id}/:
    get:
      operationId: api_billing_payments_retrieve
      description: ViewSet for managing payments.
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - api
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Payment'
          description: ''
    put:
      operationId: api_billing_payments_update
      description: ViewSet for managing payments.
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Payment'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Payment'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Payment'
        required: true
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Payment'
          description: ''
    patch:
      operationId: api_billing_payments_partial_update
      description: ViewSet for managing payments.
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedPayment'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedPayment'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedPayment'
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Payment'
          description: ''
    delete:
      operationId: api_billing_payments_destroy
      description: ViewSet for managing payments.
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - api
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '204':
          description: No response body
  /api/billing/plans/:
    get:
      operationId: api_billing_plans_list
      description: ViewSet for viewing subscription plans.
      parameters:
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      tags:
      - api
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedSubscriptionPlanList'
          description: ''
  /api/billing/plans/{id}/:
    get:
      operationId: api_billing_plans_retrieve
      description: ViewSet for viewing subscription plans.
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this Subscription Plan.
        required: true
      tags:
      - api
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SubscriptionPlan'
          description: ''
  /api/billing/subscriptions/:
    get:
      operationId: api_billing_subscriptions_list
      description: ViewSet for managing user subscriptions.
      parameters:
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      tags:
      - api
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedUserSubscriptionList'
          description: ''
    post:
      operationId: api_billing_subscriptions_create
      description: ViewSet for managing user subscriptions.
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserSubscription'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/UserSubscription'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/UserSubscription'
        required: true
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserSubscription'
          description: ''
  /api/billing/subscriptions/{id}/:
    get:
      operationId: api_billing_subscriptions_retrieve
      description: ViewSet for managing user subscriptions.
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - api
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserSubscription'
          description: ''
    put:
      operationId: api_billing_subscriptions_update
      description: ViewSet for managing user subscriptions.
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserSubscription'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/UserSubscription'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/UserSubscription'
        required: true
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserSubscription'
          description: ''
    patch:
      operationId: api_billing_subscriptions_partial_update
      description: ViewSet for managing user subscriptions.
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedUserSubscription'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedUserSubscription'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedUserSubscription'
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserSubscription'
          description: ''
    delete:
      operationId: api_billing_subscriptions_destroy
      description: ViewSet for managing user subscriptions.
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - api
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '204':
          description: No response body
  /api/billing/waiting-list/:
    get:
      operationId: api_billing_waiting_list_list
      description: ViewSet for managing waiting list.
      parameters:
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      tags:
      - api
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedWaitingListList'
          description: ''
    post:
      operationId: api_billing_waiting_list_create
      description: ViewSet for managing waiting list.
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/WaitingList'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/WaitingList'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/WaitingList'
        required: true
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WaitingList'
          description: ''
  /api/billing/waiting-list/{id}/:
    get:
      operationId: api_billing_waiting_list_retrieve
      description: ViewSet for managing waiting list.
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this Waiting List.
        required: true
      tags:
      - api
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WaitingList'
          description: ''
    put:
      operationId: api_billing_waiting_list_update
      description: ViewSet for managing waiting list.
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this Waiting List.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/WaitingList'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/WaitingList'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/WaitingList'
        required: true
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WaitingList'
          description: ''
    patch:
      operationId: api_billing_waiting_list_partial_update
      description: ViewSet for managing waiting list.
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this Waiting List.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedWaitingList'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedWaitingList'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedWaitingList'
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WaitingList'
          description: ''
    delete:
      operationId: api_billing_waiting_list_destroy
      description: ViewSet for managing waiting list.
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this Waiting List.
        required: true
      tags:
      - api
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '204':
          description: No response body
  /api/billing/waiting-list/join/:
    post:
      operationId: api_billing_waiting_list_join_create
      description: Join the waiting list.
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/WaitingList'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/WaitingList'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/WaitingList'
        required: true
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WaitingList'
          description: ''
  /api/billing/waiting-list/summary/:
    get:
      operationId: api_billing_waiting_list_summary_retrieve
      description: Get billing summary for the authenticated user.
      tags:
      - api
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WaitingList'
          description: ''
  /api/loans/:
    get:
      operationId: api_loans_list
      description: ViewSet for managing user loans.
      parameters:
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      tags:
      - api
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedLoanList'
          description: ''
    post:
      operationId: api_loans_create
      description: ViewSet for managing user loans.
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Loan'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Loan'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Loan'
        required: true
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Loan'
          description: ''
  /api/loans/{id}/:
    get:
      operationId: api_loans_retrieve
      description: ViewSet for managing user loans.
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - api
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Loan'
          description: ''
    put:
      operationId: api_loans_update
      description: ViewSet for managing user loans.
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Loan'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Loan'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Loan'
        required: true
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Loan'
          description: ''
    patch:
      operationId: api_loans_partial_update
      description: ViewSet for managing user loans.
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedLoan'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedLoan'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedLoan'
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Loan'
          description: ''
    delete:
      operationId: api_loans_destroy
      description: ViewSet for managing user loans.
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - api
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '204':
          description: No response body
  /api/loans/{id}/toggle_active/:
    post:
      operationId: api_loans_toggle_active_create
      description: Toggle the active status of a loan.
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Loan'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Loan'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Loan'
        required: true
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Loan'
          description: ''
  /api/loans/delete_inactive/:
    delete:
      operationId: api_loans_delete_inactive_destroy
      description: Delete all inactive loans for the user.
      tags:
      - api
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '204':
          description: No response body
  /api/loans/summary/:
    get:
      operationId: api_loans_summary_retrieve
      description: Get summary statistics for user's loans.
      tags:
      - api
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Loan'
          description: ''
  /api/plans/plans/:
    get:
      operationId: api_plans_plans_list
      description: ViewSet for managing debt plans.
      parameters:
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      tags:
      - api
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedDebtPlanList'
          description: ''
    post:
      operationId: api_plans_plans_create
      description: ViewSet for managing debt plans.
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DebtPlan'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/DebtPlan'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/DebtPlan'
        required: true
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DebtPlan'
          description: ''
  /api/plans/plans/{id}/:
    get:
      operationId: api_plans_plans_retrieve
      description: ViewSet for managing debt plans.
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - api
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DebtPlan'
          description: ''
    put:
      operationId: api_plans_plans_update
      description: ViewSet for managing debt plans.
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DebtPlan'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/DebtPlan'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/DebtPlan'
        required: true
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DebtPlan'
          description: ''
    patch:
      operationId: api_plans_plans_partial_update
      description: ViewSet for managing debt plans.
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedDebtPlan'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedDebtPlan'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedDebtPlan'
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DebtPlan'
          description: ''
    delete:
      operationId: api_plans_plans_destroy
      description: ViewSet for managing debt plans.
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - api
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '204':
          description: No response body
  /api/plans/plans/{id}/activate/:
    post:
      operationId: api_plans_plans_activate_create
      description: Activate a debt plan (set as user's active plan).
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DebtPlan'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/DebtPlan'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/DebtPlan'
        required: true
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DebtPlan'
          description: ''
  /api/plans/plans/{id}/calculate/:
    post:
      operationId: api_plans_plans_calculate_create
      description: Calculate debt reduction plan.
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DebtPlan'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/DebtPlan'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/DebtPlan'
        required: true
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DebtPlan'
          description: ''
  /api/plans/plans/{id}/complete/:
    post:
      operationId: api_plans_plans_complete_create
      description: Mark a debt plan as completed.
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DebtPlan'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/DebtPlan'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/DebtPlan'
        required: true
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DebtPlan'
          description: ''
  /api/plans/plans/{id}/export/:
    get:
      operationId: api_plans_plans_export_retrieve
      description: Export debt plan data (premium feature).
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - api
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DebtPlan'
          description: ''
  /api/plans/plans/{plan_pk}/progress/:
    get:
      operationId: api_plans_plans_progress_list
      description: ViewSet for managing plan progress entries.
      parameters:
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - in: path
        name: plan_pk
        schema:
          type: string
        required: true
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      tags:
      - api
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedPlanProgressList'
          description: ''
    post:
      operationId: api_plans_plans_progress_create
      description: ViewSet for managing plan progress entries.
      parameters:
      - in: path
        name: plan_pk
        schema:
          type: string
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PlanProgress'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PlanProgress'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PlanProgress'
        required: true
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PlanProgress'
          description: ''
  /api/plans/plans/{plan_pk}/progress/{id}/:
    get:
      operationId: api_plans_plans_progress_retrieve
      description: ViewSet for managing plan progress entries.
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      - in: path
        name: plan_pk
        schema:
          type: string
        required: true
      tags:
      - api
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PlanProgress'
          description: ''
    put:
      operationId: api_plans_plans_progress_update
      description: ViewSet for managing plan progress entries.
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      - in: path
        name: plan_pk
        schema:
          type: string
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PlanProgress'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PlanProgress'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PlanProgress'
        required: true
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PlanProgress'
          description: ''
    patch:
      operationId: api_plans_plans_progress_partial_update
      description: ViewSet for managing plan progress entries.
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      - in: path
        name: plan_pk
        schema:
          type: string
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedPlanProgress'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedPlanProgress'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedPlanProgress'
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PlanProgress'
          description: ''
    delete:
      operationId: api_plans_plans_progress_destroy
      description: ViewSet for managing plan progress entries.
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      - in: path
        name: plan_pk
        schema:
          type: string
        required: true
      tags:
      - api
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '204':
          description: No response body
  /api/plans/plans/{plan_pk}/progress/recent/:
    get:
      operationId: api_plans_plans_progress_recent_retrieve
      description: Get recent progress entries.
      parameters:
      - in: path
        name: plan_pk
        schema:
          type: string
        required: true
      tags:
      - api
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PlanProgress'
          description: ''
  /api/plans/plans/compare/:
    post:
      operationId: api_plans_plans_compare_create
      description: Compare multiple debt plans (premium feature).
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DebtPlan'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/DebtPlan'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/DebtPlan'
        required: true
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DebtPlan'
          description: ''
  /api/plans/plans/summary/:
    get:
      operationId: api_plans_plans_summary_retrieve
      description: Get summary statistics for user's debt plans.
      tags:
      - api
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DebtPlan'
          description: ''
components:
  schemas:
    DebtPlan:
      type: object
      description: Serializer for DebtPlan model.
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        user:
          type: integer
          readOnly: true
        name:
          type: string
          description: Name for this debt plan
          maxLength: 100
        method:
          allOf:
          - $ref: '#/components/schemas/MethodEnum'
          description: |-
            Debt reduction method

            * `snowball` - Debt Snowball
            * `avalanche` - Debt Avalanche
            * `consolidation` - Debt Consolidation
        extra_payment:
          type: string
          format: decimal
          pattern: ^-?\d{0,8}(?:\.\d{0,2})?$
          description: Extra monthly payment amount
        consolidation_rate:
          type: string
          format: decimal
          pattern: ^-?\d{0,3}(?:\.\d{0,2})?$
          nullable: true
          description: Consolidated loan interest rate (for consolidation method)
        consolidation_term:
          type: integer
          maximum: 9223372036854775807
          minimum: 0
          format: int64
          nullable: true
          description: Consolidated loan term in months
        total_debt:
          type: string
          format: decimal
          pattern: ^-?\d{0,10}(?:\.\d{0,2})?$
          readOnly: true
        total_interest_saved:
          type: string
          format: decimal
          pattern: ^-?\d{0,10}(?:\.\d{0,2})?$
          readOnly: true
        payoff_months:
          type: integer
          readOnly: true
          description: Estimated months to pay off all debt
        total_payments:
          type: string
          format: decimal
          pattern: ^-?\d{0,10}(?:\.\d{0,2})?$
          readOnly: true
        status:
          $ref: '#/components/schemas/DebtPlanStatusEnum'
        is_active:
          type: boolean
          description: Whether this is the user's active plan
        plan_data:
          readOnly: true
          description: Detailed plan calculation data
        loans_count:
          type: string
          readOnly: true
        is_calculated:
          type: string
          readOnly: true
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
      required:
      - created_at
      - id
      - is_calculated
      - loans_count
      - method
      - name
      - payoff_months
      - plan_data
      - total_debt
      - total_interest_saved
      - total_payments
      - updated_at
      - user
    DebtPlanStatusEnum:
      enum:
      - draft
      - active
      - completed
      - paused
      type: string
      description: |-
        * `draft` - Draft
        * `active` - Active
        * `completed` - Completed
        * `paused` - Paused
    InterestEnum:
      enum:
      - free
      - pro
      - premium
      - business
      type: string
      description: |-
        * `free` - Free basic calculator
        * `pro` - Pro features
        * `premium` - Premium features
        * `business` - Business solutions
    IntervalEnum:
      enum:
      - month
      - year
      type: string
      description: |-
        * `month` - Monthly
        * `year` - Yearly
    Loan:
      type: object
      description: Serializer for Loan model with validation.
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        user:
          type: integer
          readOnly: true
        name:
          type: string
          description: Name or description of the loan
          maxLength: 100
        balance:
          type: string
          format: decimal
          pattern: ^-?\d{0,10}(?:\.\d{0,2})?$
          description: Current outstanding balance
        interest_rate:
          type: string
          format: decimal
          pattern: ^-?\d{0,3}(?:\.\d{0,2})?$
          description: Annual interest rate (APR) in percent
        monthly_interest_rate:
          type: string
          readOnly: true
        minimum_payment:
          type: string
          format: decimal
          pattern: ^-?\d{0,8}(?:\.\d{0,2})?$
          description: Minimum monthly payment required
        estimated_payoff_months:
          type: string
          readOnly: true
        is_active:
          type: boolean
          description: Whether this loan is still active
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
      required:
      - balance
      - created_at
      - estimated_payoff_months
      - id
      - interest_rate
      - minimum_payment
      - monthly_interest_rate
      - name
      - updated_at
      - user
    Login:
      type: object
      properties:
        username:
          type: string
        email:
          type: string
          format: email
        password:
          type: string
      required:
      - password
    MethodEnum:
      enum:
      - snowball
      - avalanche
      - consolidation
      type: string
      description: |-
        * `snowball` - Debt Snowball
        * `avalanche` - Debt Avalanche
        * `consolidation` - Debt Consolidation
    PaginatedDebtPlanList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/DebtPlan'
    PaginatedLoanList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/Loan'
    PaginatedPaymentList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/Payment'
    PaginatedPlanProgressList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/PlanProgress'
    PaginatedSubscriptionPlanList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/SubscriptionPlan'
    PaginatedUserSubscriptionList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/UserSubscription'
    PaginatedWaitingListList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/WaitingList'
    PasswordChange:
      type: object
      properties:
        new_password1:
          type: string
          maxLength: 128
        new_password2:
          type: string
          maxLength: 128
      required:
      - new_password1
      - new_password2
    PasswordReset:
      type: object
      description: Serializer for requesting a password reset e-mail.
      properties:
        email:
          type: string
          format: email
      required:
      - email
    PasswordResetConfirm:
      type: object
      description: Serializer for confirming a password reset attempt.
      properties:
        new_password1:
          type: string
          maxLength: 128
        new_password2:
          type: string
          maxLength: 128
        uid:
          type: string
        token:
          type: string
      required:
      - new_password1
      - new_password2
      - token
      - uid
    PatchedDebtPlan:
      type: object
      description: Serializer for DebtPlan model.
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        user:
          type: integer
          readOnly: true
        name:
          type: string
          description: Name for this debt plan
          maxLength: 100
        method:
          allOf:
          - $ref: '#/components/schemas/MethodEnum'
          description: |-
            Debt reduction method

            * `snowball` - Debt Snowball
            * `avalanche` - Debt Avalanche
            * `consolidation` - Debt Consolidation
        extra_payment:
          type: string
          format: decimal
          pattern: ^-?\d{0,8}(?:\.\d{0,2})?$
          description: Extra monthly payment amount
        consolidation_rate:
          type: string
          format: decimal
          pattern: ^-?\d{0,3}(?:\.\d{0,2})?$
          nullable: true
          description: Consolidated loan interest rate (for consolidation method)
        consolidation_term:
          type: integer
          maximum: 9223372036854775807
          minimum: 0
          format: int64
          nullable: true
          description: Consolidated loan term in months
        total_debt:
          type: string
          format: decimal
          pattern: ^-?\d{0,10}(?:\.\d{0,2})?$
          readOnly: true
        total_interest_saved:
          type: string
          format: decimal
          pattern: ^-?\d{0,10}(?:\.\d{0,2})?$
          readOnly: true
        payoff_months:
          type: integer
          readOnly: true
          description: Estimated months to pay off all debt
        total_payments:
          type: string
          format: decimal
          pattern: ^-?\d{0,10}(?:\.\d{0,2})?$
          readOnly: true
        status:
          $ref: '#/components/schemas/DebtPlanStatusEnum'
        is_active:
          type: boolean
          description: Whether this is the user's active plan
        plan_data:
          readOnly: true
          description: Detailed plan calculation data
        loans_count:
          type: string
          readOnly: true
        is_calculated:
          type: string
          readOnly: true
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
    PatchedLoan:
      type: object
      description: Serializer for Loan model with validation.
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        user:
          type: integer
          readOnly: true
        name:
          type: string
          description: Name or description of the loan
          maxLength: 100
        balance:
          type: string
          format: decimal
          pattern: ^-?\d{0,10}(?:\.\d{0,2})?$
          description: Current outstanding balance
        interest_rate:
          type: string
          format: decimal
          pattern: ^-?\d{0,3}(?:\.\d{0,2})?$
          description: Annual interest rate (APR) in percent
        monthly_interest_rate:
          type: string
          readOnly: true
        minimum_payment:
          type: string
          format: decimal
          pattern: ^-?\d{0,8}(?:\.\d{0,2})?$
          description: Minimum monthly payment required
        estimated_payoff_months:
          type: string
          readOnly: true
        is_active:
          type: boolean
          description: Whether this loan is still active
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
    PatchedPayment:
      type: object
      description: Serializer for Payment model.
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        user:
          type: integer
          readOnly: true
        subscription:
          type: string
          format: uuid
          nullable: true
        payment_type:
          $ref: '#/components/schemas/PaymentTypeEnum'
        amount:
          type: string
          format: decimal
          pattern: ^-?\d{0,6}(?:\.\d{0,2})?$
        currency:
          type: string
          maxLength: 3
        status:
          $ref: '#/components/schemas/PaymentStatusEnum'
        stripe_payment_intent_id:
          type: string
          readOnly: true
        stripe_charge_id:
          type: string
          readOnly: true
        description:
          type: string
          description: Description of the payment
        failure_reason:
          type: string
          description: Reason for payment failure
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
        paid_at:
          type: string
          format: date-time
          readOnly: true
          nullable: true
    PatchedPlanProgress:
      type: object
      description: Serializer for PlanProgress model.
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        plan:
          type: string
          format: uuid
        month:
          type: integer
          maximum: 9223372036854775807
          minimum: 0
          format: int64
          description: Month number in the plan
        actual_payment:
          type: string
          format: decimal
          pattern: ^-?\d{0,8}(?:\.\d{0,2})?$
          description: Actual payment made this month
        notes:
          type: string
          description: Notes about this month's progress
        created_at:
          type: string
          format: date-time
          readOnly: true
    PatchedUserDetails:
      type: object
      description: User model w/o password
      properties:
        pk:
          type: integer
          readOnly: true
          title: ID
        username:
          type: string
          description: Required. 150 characters or fewer. Letters, digits and @/./+/-/_
            only.
          pattern: ^[\w.@+-]+$
          maxLength: 150
        email:
          type: string
          format: email
          readOnly: true
          title: Email address
        first_name:
          type: string
          maxLength: 150
        last_name:
          type: string
          maxLength: 150
    PatchedUserSubscription:
      type: object
      description: Serializer for UserSubscription model.
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        user:
          type: integer
          readOnly: true
        plan:
          type: string
          format: uuid
        plan_name:
          type: string
          readOnly: true
        status:
          $ref: '#/components/schemas/UserSubscriptionStatusEnum'
        current_period_start:
          type: string
          format: date-time
          readOnly: true
          nullable: true
        current_period_end:
          type: string
          format: date-time
          readOnly: true
          nullable: true
        cancel_at_period_end:
          type: boolean
        days_remaining:
          type: string
          readOnly: true
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
    PatchedWaitingList:
      type: object
      description: Serializer for WaitingList model.
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        email:
          type: string
          format: email
          maxLength: 254
        name:
          type: string
          maxLength: 100
        interest:
          $ref: '#/components/schemas/InterestEnum'
        signup_ip:
          type: string
          readOnly: true
          nullable: true
        user_agent:
          type: string
          readOnly: true
        is_notified:
          type: boolean
          readOnly: true
          description: Whether user has been notified of launch
        created_at:
          type: string
          format: date-time
          readOnly: true
    Payment:
      type: object
      description: Serializer for Payment model.
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        user:
          type: integer
          readOnly: true
        subscription:
          type: string
          format: uuid
          nullable: true
        payment_type:
          $ref: '#/components/schemas/PaymentTypeEnum'
        amount:
          type: string
          format: decimal
          pattern: ^-?\d{0,6}(?:\.\d{0,2})?$
        currency:
          type: string
          maxLength: 3
        status:
          $ref: '#/components/schemas/PaymentStatusEnum'
        stripe_payment_intent_id:
          type: string
          readOnly: true
        stripe_charge_id:
          type: string
          readOnly: true
        description:
          type: string
          description: Description of the payment
        failure_reason:
          type: string
          description: Reason for payment failure
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
        paid_at:
          type: string
          format: date-time
          readOnly: true
          nullable: true
      required:
      - amount
      - created_at
      - id
      - paid_at
      - payment_type
      - stripe_charge_id
      - stripe_payment_intent_id
      - updated_at
      - user
    PaymentStatusEnum:
      enum:
      - pending
      - succeeded
      - failed
      - canceled
      - refunded
      type: string
      description: |-
        * `pending` - Pending
        * `succeeded` - Succeeded
        * `failed` - Failed
        * `canceled` - Canceled
        * `refunded` - Refunded
    PaymentTypeEnum:
      enum:
      - subscription
      - one_time
      type: string
      description: |-
        * `subscription` - Subscription
        * `one_time` - One-time Purchase
    PlanProgress:
      type: object
      description: Serializer for PlanProgress model.
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        plan:
          type: string
          format: uuid
        month:
          type: integer
          maximum: 9223372036854775807
          minimum: 0
          format: int64
          description: Month number in the plan
        actual_payment:
          type: string
          format: decimal
          pattern: ^-?\d{0,8}(?:\.\d{0,2})?$
          description: Actual payment made this month
        notes:
          type: string
          description: Notes about this month's progress
        created_at:
          type: string
          format: date-time
          readOnly: true
      required:
      - actual_payment
      - created_at
      - id
      - month
      - plan
    PlanTypeEnum:
      enum:
      - free
      - pro
      - premium
      type: string
      description: |-
        * `free` - Free
        * `pro` - Pro
        * `premium` - Premium
    Register:
      type: object
      properties:
        username:
          type: string
          maxLength: 150
          minLength: 1
        email:
          type: string
          format: email
        password1:
          type: string
          writeOnly: true
        password2:
          type: string
          writeOnly: true
      required:
      - email
      - password1
      - password2
      - username
    ResendEmailVerification:
      type: object
      properties:
        email:
          type: string
          format: email
      required:
      - email
    RestAuthDetail:
      type: object
      properties:
        detail:
          type: string
          readOnly: true
      required:
      - detail
    SubscriptionPlan:
      type: object
      description: Serializer for SubscriptionPlan model.
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        name:
          type: string
          maxLength: 50
        plan_type:
          $ref: '#/components/schemas/PlanTypeEnum'
        interval:
          $ref: '#/components/schemas/IntervalEnum'
        price:
          type: string
          format: decimal
          pattern: ^-?\d{0,6}(?:\.\d{0,2})?$
          description: Price in USD
        stripe_price_id:
          type: string
          description: Stripe Price ID
          maxLength: 100
        max_loans:
          type: integer
          maximum: 9223372036854775807
          minimum: 0
          format: int64
          description: Maximum number of loans allowed
        can_export:
          type: boolean
          description: Can export plans to PDF
        can_compare:
          type: boolean
          description: Can compare multiple plans
        advanced_analytics:
          type: boolean
          description: Access to advanced analytics
        priority_support:
          type: boolean
          description: Priority customer support
        api_access:
          type: boolean
          description: API access for integrations
        is_active:
          type: boolean
          description: Whether this plan is available for purchase
        is_popular:
          type: boolean
          description: Mark as popular plan
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
      required:
      - created_at
      - id
      - name
      - plan_type
      - price
      - updated_at
    Token:
      type: object
      description: Serializer for Token model.
      properties:
        key:
          type: string
          maxLength: 40
      required:
      - key
    UserDetails:
      type: object
      description: User model w/o password
      properties:
        pk:
          type: integer
          readOnly: true
          title: ID
        username:
          type: string
          description: Required. 150 characters or fewer. Letters, digits and @/./+/-/_
            only.
          pattern: ^[\w.@+-]+$
          maxLength: 150
        email:
          type: string
          format: email
          readOnly: true
          title: Email address
        first_name:
          type: string
          maxLength: 150
        last_name:
          type: string
          maxLength: 150
      required:
      - email
      - pk
      - username
    UserSubscription:
      type: object
      description: Serializer for UserSubscription model.
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        user:
          type: integer
          readOnly: true
        plan:
          type: string
          format: uuid
        plan_name:
          type: string
          readOnly: true
        status:
          $ref: '#/components/schemas/UserSubscriptionStatusEnum'
        current_period_start:
          type: string
          format: date-time
          readOnly: true
          nullable: true
        current_period_end:
          type: string
          format: date-time
          readOnly: true
          nullable: true
        cancel_at_period_end:
          type: boolean
        days_remaining:
          type: string
          readOnly: true
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
      required:
      - created_at
      - current_period_end
      - current_period_start
      - days_remaining
      - id
      - plan
      - plan_name
      - updated_at
      - user
    UserSubscriptionStatusEnum:
      enum:
      - active
      - canceled
      - past_due
      - incomplete
      - trialing
      type: string
      description: |-
        * `active` - Active
        * `canceled` - Canceled
        * `past_due` - Past Due
        * `incomplete` - Incomplete
        * `trialing` - Trialing
    VerifyEmail:
      type: object
      properties:
        key:
          type: string
          writeOnly: true
      required:
      - key
    WaitingList:
      type: object
      description: Serializer for WaitingList model.
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        email:
          type: string
          format: email
          maxLength: 254
        name:
          type: string
          maxLength: 100
        interest:
          $ref: '#/components/schemas/InterestEnum'
        signup_ip:
          type: string
          readOnly: true
          nullable: true
        user_agent:
          type: string
          readOnly: true
        is_notified:
          type: boolean
          readOnly: true
          description: Whether user has been notified of launch
        created_at:
          type: string
          format: date-time
          readOnly: true
      required:
      - created_at
      - email
      - id
      - is_notified
      - name
      - signup_ip
      - user_agent
  securitySchemes:
    basicAuth:
      type: http
      scheme: basic
    cookieAuth:
      type: apiKey
      in: cookie
      name: sessionid
